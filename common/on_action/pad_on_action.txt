on_death = { 
	on_actions = { 
		pad_update_candidates_action 
	} 
} 

pad_update_candidates_action = { 
	effect = {
		clear_global_variable_list = pad_candidates

		every_living_character = {
			limit = {
				is_ruler = yes
				has_trait = paranoid
				has_trait = content
			}

			add_to_global_variable_list = {
				name = pad_candidates
				target = this
			}
		}
	} 
}

### Called when succession has happened - to fill the select-your-destiny character lists.
# Scopes:
# root: previous (dead) character
# scope:predecessor - previous (dead) character
# scope:heir - current player heir (which is the current player character at this point)
#
# Expected return set scopes:
# scope:main_destiny_types - list of flags of available main destiny character types (they may be empty)
# scope:random_destiny_types - list of flags of available random destiny character types (they may be empty)
# scope:<flag_of_destiny_type> - character available for destiny
on_player_select_destiny_setup = {
	effect = {

	}
}

### Called when player has confirmed their selection of a destiny character
# Scopes:
# root: destiny character (is already current player)
# scope:destiny_type_flag - flag of selected destiny type
# scope:previous_player_character - previous player character
# scope:previous_player_heir - previous player heir
on_player_select_destiny_confirmed = {
	effect = {
		if = {
			limit = {
				is_ruler = no
			}
			create_landless_adventurer_title_effect = {
				REASON = flag:voluntary
				FLAVOR_CHAR = root
			}
		}
		if = {
			limit = {
				NOT = {
					exists = global_var:achievement_quantum_leap_count_tracker
				}
			}
			set_global_variable = {
				name = achievement_quantum_leap_count_tracker
				value = 1
			}
		}
		else_if = {
			limit = {
				exists = global_var:achievement_quantum_leap_count_tracker
			}
			change_global_variable = {
				name = achievement_quantum_leap_count_tracker
				add = 1
			}
		}
		if = {
			limit = {
				is_landed = yes
				highest_held_title_tier = tier_empire
			}
			add_achievement_global_variable_effect = {
				VARIABLE = rags_to_riches_to_rags_to_riches_first_empire
				VALUE = yes
			}
		}
		if = {
			limit = {
				is_ai = no
				is_landed = yes
				highest_held_title_tier = tier_empire
				exists = global_var:rags_to_riches_to_rags_to_riches_adventurer
			}
			add_achievement_global_variable_effect = {
				VARIABLE = finished_rags_to_riches_to_rags_to_riches_achievement
				VALUE = yes
			}
		}
    }
}
